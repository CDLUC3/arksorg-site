---

#- name: Get python_home from pyenv prefix
#  command:
#    cmd: "pyenv prefix"
#  register: _response
#
#- name: Set python_home var
#  set_fact:
#    python_home: "{{ _response.stdout }}"
#
#- name: Symlink lib64 to lib in pyenv
#  file:
#    src: "{{ python_home }}/lib"
#    dest: "{{ python_home }}/lib64"
#    state: link

- name: Clone arksorg repo
  git:
    repo: "{{ arksorg_repo }}"
    dest: "{{ deploy_dir }}"
    version: "{{ arksorg_version }}"
    force: yes

- name: Install gems from arks.github.io Gemfile
  community.general.bundler:
    chdir: "{{deploy_dir}}/arks.github.io"

- name: Run bundle exec jekyll to build arks.github.io site
  command:
    chdir: "{{deploy_dir}}/arks.github.io"
    cmd: "bundle exec jekyll build --config _config.yml,../_config.local.yml"

- name: Install resolver dependencies
  pip:
    state: present
    chdir: "{{deploy_dir}}/resolver"
    requirements: requirements.txt
    virtualenv: "{{deploy_dir}}/venv"
    virtualenv_command: "python3.11 -m venv"

- name: Print unit.json contents
  ansible.builtin.debug:
    msg: "{{ lookup('ansible.builtin.template', 'templates/unit.json.j2')| to_nice_json }}"

- name: Configure nginx unit
  uri:
    url: http://localhost/config/
    unix_socket: /var/run/unit/control.sock
    method: PUT
    body_format: json
    body: "{{ lookup('ansible.builtin.template','templates/unit.json.j2') }}"







  
#- block:
#  - name: Build the site documents using Jekyll
#    include_tasks: build_site_docs.yaml
#  tags: build_site_docs

