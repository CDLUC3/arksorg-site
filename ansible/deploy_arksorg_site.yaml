---

# Usage:
#
# export ANSIBLE_STDOUT_CALLBACK=debug
# ansible-playbook -i hosts deploy_arksorg_site.yaml -CD
# ansible-playbook -i hosts deploy_arksorg_site.yaml


- hosts: all
  connection: local
  remote_user: "{{user}}"
  tasks:

  - name: Clone arksorg repo
    ansible.builtin.git:
      repo: "{{ arksorg_repo }}"
      dest: "{{ deploy_dir }}"
      version: "{{ arksorg_version }}"
      force: yes

  - name: Clone arks.github.io repo
    ansible.builtin.git:
      repo: "{{ arksghio_repo }}"
      dest: "{{ deploy_dir }}/arks.github.io"
      version: "{{ arksghio_version }}"
      force: yes
  
  - name: Install gems from arks.github.io Gemfile
    community.general.bundler:
      chdir: "{{deploy_dir}}/arks.github.io"
  
  - name: Run bundle exec jekyll to build arks.github.io site
    ansible.builtin.command:
      chdir: "{{deploy_dir}}/arks.github.io"
      cmd: "bundle exec jekyll build --config _config.yml,../_config.local.yml"

  - name: Install arks application
    ansible.builtin.pip:
      state: present
      chdir: "{{deploy_dir}}"
      virtualenv: "{{deploy_dir}}/venv"
      virtualenv_command: "python3.11 -m venv"
      name: .
      editable: true

  #- name: Install resolver dependencies
  #  ansible.builtin.pip:
  #    state: present
  #    chdir: "{{deploy_dir}}/resolver"
  #    requirements: requirements.txt
  #    virtualenv: "{{deploy_dir}}/venv"
  #    virtualenv_command: "python3.11 -m venv"

  #- name: Install resolver application
  #  ansible.builtin.pip:
  #    state: present
  #    chdir: "{{deploy_dir}}/resolver"
  #    virtualenv: "{{deploy_dir}}/venv"
  #    virtualenv_command: "python3.11 -m venv"
  #    name: .

  - name: Print unit.json contents
    ansible.builtin.debug:
      msg: "{{ lookup('ansible.builtin.template', 'templates/unit.json.j2')| to_nice_json }}"
  
  - name: Configure nginx unit
    ansible.builtin.uri:
      url: http://localhost/config/
      unix_socket: /var/run/unit/control.sock
      method: PUT
      body_format: json
      body: "{{ lookup('ansible.builtin.template','templates/unit.json.j2') }}"

  #- name: Initialize resolver application
  #  ansible.builtin.script:
  #    chdir: "{{deploy_dir}}"
  #    cmd: "{{deploy_dir}}/scripts/run_command.sh {{deploy_dir}}/scripts/naan_manage.py init Initialized"
  #    creates: "{{config_dir}}pid_config.sqlite"

  #- name: Configure resolver application
  #  ansible.builtin.script:
  #    chdir: "{{deploy_dir}}"
  #    cmd: "{{deploy_dir}}/scripts/run_command.sh {{deploy_dir}}/scripts/naan_manage.py naans"

